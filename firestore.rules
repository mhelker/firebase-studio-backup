rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions (unchanged)
    function isSignedIn() {
      return request.auth != null;
    }
    function isOwner(userId) {
      return request.auth.uid == userId;
    }
    function isAdmin() {
      let adminUIDs = ['vygqDhG0kRQx4wDrBaYV8H2q1n12'];
      return request.auth.uid in adminUIDs;
    }
    
    // Performers rules are correct and unchanged
    match /performers/{performerId} {
      allow get, list: if true;
      allow create: if isSignedIn() && isOwner(performerId);
      allow update: if isSignedIn() && isOwner(performerId);
      allow delete: if false;
      match /reviews/{reviewId} {
        allow read: if true;
        allow write: if false; 
      }
    }
    
    // ==========================================
    //              Customers
    // ==========================================
    match /customers/{userId} {
      // --- THIS IS THE FINAL FIX ---
      // GET: A user can only get their own private document. This keeps it secure.
      allow get, create, update: if isSignedIn() && isOwner(userId);
      // LIST: Anyone can query the collection. This allows the homepage to work.
      allow list: if true;
      // DELETE: Not allowed.
      allow delete: if false;

      // ... (subcollection rules are unchanged)
      match /reviews/{reviewId} {
        allow read: if true;
        allow write: if false;
      }
    }
    
    // Bookings and other rules are correct and unchanged
    match /bookings/{bookingId} {
      allow read: if isSignedIn() && (isOwner(resource.data.userId) || isOwner(resource.data.performerId));
      allow create: if isSignedIn() && isOwner(request.resource.data.userId);
      allow update: if isSignedIn() && (isOwner(resource.data.userId) || isOwner(resource.data.performerId));
      allow delete: if false;
    }
    match /feedback/{feedbackId} {
      allow read: if isSignedIn() && isAdmin();
      allow create: if isSignedIn();
      allow update, delete: if false;
    }
    match /suggestions/{suggestionId} {
        allow read: if true;
        allow create: if isSignedIn();
        allow update: if isSignedIn() && isAdmin();
        allow delete: if false;
    }
  }
}