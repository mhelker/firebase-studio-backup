rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    // Helper functions
    function isSignedIn() {
      return request.auth != null;
    }

    function isOwner(userId) {
      return request.auth.uid == userId;
    }

    /* REMOVE THIS BLOCK IF YOU ARE NOT USING IT
    function isAdmin() {
      // Optional: you can leave empty for dev
      return false;
    }
    */

    // ==========================================
    //              Performers
    // ==========================================
    match /performers/{performerId} {
      allow read: if true;
      allow create, update: if isSignedIn();
      allow delete: if false;

      match /reviews/{reviewId} {
        allow read: if true;
        allow write: if isSignedIn(); // Allow dev testing
      }
    }

    // ==========================================
    //              Customers
    // ==========================================
    match /customers/{userId} {
      allow read: if true;
      allow create, update: if isSignedIn();
      allow delete: if false;

      match /reviews/{reviewId} {
        allow read: if true;
        allow write: if isSignedIn(); // dev testing
      }
    }

    // ==========================================
    //              Bookings
    // ==========================================
    match /bookings/{bookingId} {
      // Allow read only to the customer who owns it or the performer assigned
      allow read: if isSignedIn() && (isOwner(resource.data.customerId) || isOwner(resource.data.performerId));

      // Allow create only if signed in (usually a customer)
      allow create: if isSignedIn();

      // Allow update only for the owner of the document (customer or performer) depending on fields
      allow update: if isSignedIn() && (
        // Customer can set status to 'confirmed'
        (isOwner(resource.data.customerId) && request.resource.data.keys().hasAny(['status']) && request.resource.data.status == 'confirmed')
        ||
        // Performer can mark completed or update meetingLink
        (isOwner(resource.data.performerId) && request.resource.data.keys().hasAny(['status', 'performerCompleted', 'meetingLink']))
      );

      allow delete: if false;
    }

    // ==========================================
    //              Feedback
    // ==========================================
    match /feedback/{feedbackId} {
      allow read: if isSignedIn();
      allow create: if isSignedIn();
      allow update, delete: if false;
    }

    // ==========================================
    //              Suggestions
    // ==========================================
    match /suggestions/{suggestionId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if false;

      // ==========================================
      //              Comments subcollection
      // ==========================================
      match /comments/{commentId} {
        allow read: if true;           // Anyone can see comments
        allow create: if isSignedIn(); // Local dev can add comments
        allow update, delete: if false;
      }
    }

    // ==========================================
    //              Questions
    // ==========================================
    match /questions/{questionId} {
      allow read: if true;
      allow create: if isSignedIn();
      allow update: if isSignedIn();
      allow delete: if false;
    }
  }
}