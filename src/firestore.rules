
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Performers can be read by anyone, but only edited by the performer themselves.
    match /performers/{performerId} {
      allow read: if true;
      allow write: if request.auth != null && request.auth.uid == performerId;
    }
    
    // Customers can be read by anyone.
    // Any authenticated user can create or update a customer profile (needed for reviews).
    match /customers/{customerId} {
        allow read: if true;
        allow create, update: if request.auth != null;
    }
    
    // Bookings have more complex rules.
    match /bookings/{bookingId} {
      // Users can create new bookings.
      allow create: if request.auth != null && request.auth.uid == request.resource.data.userId;
      
      // Users can read their own bookings, and performers can read bookings they are part of.
      allow read: if request.auth != null && 
                    (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.performerId);
                    
      // Users can update a booking (e.g., to cancel), and performers can update (e.g., to accept/complete).
      allow update: if request.auth != null && 
                    (request.auth.uid == resource.data.userId || request.auth.uid == resource.data.performerId);
    }
    
    // Anyone can read reviews. Only authenticated users can write them,
    // and this is further protected by server-side transaction logic.
    match /performers/{performerId}/reviews/{reviewId} {
        allow read: if true;
        allow write: if request.auth != null;
    }
    
    // Suggestions can be read by anyone.
    // Writing is handled by the secure Genkit flow, so we can be more permissive here.
    match /suggestions/{suggestionId} {
        allow read: if true;
        allow write: if request.auth != null;
    }

    // Feedback can only be written by authenticated users.
    // Reading feedback would typically be an admin-only function.
    match /feedback/{feedbackId} {
        allow read: if false; // No one can read feedback directly from the client.
        allow write: if request.auth != null;
    }
  }
}
